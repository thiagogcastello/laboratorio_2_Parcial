<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>